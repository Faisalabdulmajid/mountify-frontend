{"version":3,"file":"static/js/421.b50632ce.chunk.js","mappings":"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","sources":["components/common/PageHeader/PageHeader.js","components/common/Pagination/Pagination.js","pages/admin/artikel/components/ArtikelToolbar.js","pages/admin/artikel/KelolaArtikel.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst PageHeader = ({\r\n  title,\r\n  onAddClick,\r\n  addLabel = \"Tambah\",\r\n  addIcon = <i className=\"bi bi-plus-lg\"></i>,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div className=\"controls-container\">\r\n      <div className=\"header-row\">\r\n        <h1 className=\"page-title\">{title}</h1>\r\n        {onAddClick && (\r\n          <button className=\"btn-add-new\" onClick={onAddClick}>\r\n            {addIcon} {addLabel}\r\n          </button>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","// src/components/common/Pagination/Pagination.js\r\nimport React from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  totalPages,\r\n  itemsPerPage,\r\n  totalItems,\r\n  onPageChange,\r\n  onItemsPerPageChange,\r\n  indexOfFirstItem,\r\n  currentItemsLength,\r\n}) => {\r\n  const handleItemsPerPageChange = (event) => {\r\n    onItemsPerPageChange(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) {\r\n      onPageChange(pageNumber);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <div className=\"pagination-info\">\r\n        <span>Baris per halaman:</span>\r\n        <select\r\n          value={itemsPerPage}\r\n          onChange={handleItemsPerPageChange}\r\n          className=\"items-per-page-select\"\r\n        >\r\n          <option value={5}>5</option>\r\n          <option value={10}>10</option>\r\n          <option value={20}>20</option>\r\n          <option value={50}>50</option>\r\n          <option value={100}>100</option>\r\n        </select>\r\n        <span style={{ marginLeft: \"15px\" }}>\r\n          Menampilkan {currentItemsLength > 0 ? indexOfFirstItem + 1 : 0}-\r\n          {indexOfFirstItem + currentItemsLength} dari {totalItems} data\r\n        </span>\r\n      </div>\r\n      <div className=\"pagination-controls\">\r\n        <button\r\n          onClick={() => paginate(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n        >\r\n          Sebelumnya\r\n        </button>\r\n        <span>\r\n          Halaman {currentPage} dari {totalPages || 1}\r\n        </span>\r\n        <button\r\n          onClick={() => paginate(currentPage + 1)}\r\n          disabled={currentPage === totalPages || totalPages === 0}\r\n        >\r\n          Selanjutnya\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ArtikelToolbar = ({ searchTerm, setSearchTerm, setCurrentPage }) => {\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <div className=\"search-container\">\r\n        <div className=\"input-wrapper-icon\">\r\n          <i className=\"bi bi-search\"></i>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Cari artikel (judul, kategori, penulis)...\"\r\n            value={searchTerm}\r\n            onChange={(e) => {\r\n              setSearchTerm(e.target.value);\r\n              setCurrentPage(1);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtikelToolbar;\r\n","import React, { useState, useMemo, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./KelolaArtikel.css\";\r\nimport { PageHeader } from \"../../../components/common/PageHeader\";\r\nimport \"../../../components/common/PageHeader/PageHeader.css\";\r\nimport Pagination from \"../../../components/common/Pagination\";\r\nimport { ArtikelToolbar } from \"./components\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api/admin\";\r\n\r\nfunction KelolaArtikel() {\r\n  const navigate = useNavigate();\r\n  const [artikelList, setArtikelList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(8);\r\n\r\n  useEffect(() => {\r\n    const fetchArtikel = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          toast.warn(\"Anda harus login untuk mengakses data ini.\");\r\n          setIsLoading(false);\r\n          navigate(\"/login\"); // Arahkan ke login jika tidak ada token\r\n          return;\r\n        }\r\n\r\n        const response = await fetch(`${API_BASE_URL}/articles`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Gagal mengambil data artikel.\");\r\n        }\r\n        const data = await response.json();\r\n        setArtikelList(data);\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchArtikel();\r\n  }, [navigate]);\r\n\r\n  const handleDeleteArtikel = async (id, judul) => {\r\n    if (\r\n      window.confirm(`Apakah Anda yakin ingin menghapus artikel \"${judul}\"?`)\r\n    ) {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await fetch(`${API_BASE_URL}/articles/${id}`, {\r\n          method: \"DELETE\",\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Gagal menghapus artikel.\");\r\n        }\r\n\r\n        setArtikelList((prevList) =>\r\n          prevList.filter((item) => item.id_artikel !== id)\r\n        );\r\n        toast.success(`Artikel \"${judul}\" berhasil dihapus.`);\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const filteredArtikel = useMemo(() => {\r\n    if (!artikelList || artikelList.length === 0) return [];\r\n    return artikelList.filter(\r\n      (artikel) =>\r\n        artikel.judul.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        artikel.kategori.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (artikel.penulis &&\r\n          artikel.penulis.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    );\r\n  }, [artikelList, searchTerm]);\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = filteredArtikel.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(filteredArtikel.length / itemsPerPage);\r\n\r\n  const handleAddArtikel = () => navigate(\"/admin/articles/new\");\r\n  const handleEditArtikel = (id) => navigate(`/admin/articles/edit/${id}`);\r\n\r\n  const formatDisplayDate = (isoDateString) => {\r\n    if (!isoDateString) return \"-\";\r\n    const date = new Date(isoDateString);\r\n    return date.toLocaleDateString(\"id-ID\", {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n    });\r\n  };\r\n\r\n  const getStatusDisplay = (statusDB) => {\r\n    const statusMap = {\r\n      Published: \"Dipublikasikan\",\r\n      Draft: \"Draft\",\r\n      Archived: \"Diarsipkan\",\r\n    };\r\n    return statusMap[statusDB] || statusDB;\r\n  };\r\n  return (\r\n    <div className=\"artikel-management-page\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n      />\r\n      <PageHeader\r\n        title=\"Manajemen Artikel\"\r\n        addLabel=\"Tulis Artikel Baru\"\r\n        onAddClick={handleAddArtikel}\r\n      />\r\n\r\n      <ArtikelToolbar\r\n        searchTerm={searchTerm}\r\n        setSearchTerm={setSearchTerm}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n\r\n      <div className=\"table-container\">\r\n        <table className=\"data-table\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"30%\" }}>\r\n                <div className=\"header-cell-content\">\r\n                  <span>Judul Artikel</span>\r\n                </div>\r\n              </th>\r\n              <th style={{ width: \"15%\" }}>\r\n                <div className=\"header-cell-content\">\r\n                  <span>Kategori</span>\r\n                </div>\r\n              </th>\r\n              <th style={{ width: \"15%\" }}>\r\n                <div className=\"header-cell-content\">\r\n                  <span>Penulis</span>\r\n                </div>\r\n              </th>\r\n              <th style={{ width: \"12%\" }}>\r\n                <div className=\"header-cell-content\">\r\n                  <span>Status</span>\r\n                </div>\r\n              </th>\r\n              <th style={{ width: \"18%\" }}>\r\n                <div className=\"header-cell-content\">\r\n                  <span>Terakhir Diperbarui</span>\r\n                </div>\r\n              </th>\r\n              <th style={{ width: \"10%\" }}>Aksi</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {isLoading ? (\r\n              <tr>\r\n                <td colSpan=\"6\" className=\"text-center\">\r\n                  Memuat data...\r\n                </td>\r\n              </tr>\r\n            ) : currentItems.length > 0 ? (\r\n              currentItems.map((artikel) => (\r\n                <tr key={artikel.id_artikel}>\r\n                  <td className=\"artikel-judul\">{artikel.judul}</td>\r\n                  <td>{artikel.kategori}</td>\r\n                  <td>{artikel.penulis || \"N/A\"}</td>\r\n                  <td>\r\n                    <span\r\n                      className={`status-badge status-${getStatusDisplay(\r\n                        artikel.status\r\n                      )\r\n                        .toLowerCase()\r\n                        .replace(/\\s+/g, \"-\")}`}\r\n                    >\r\n                      {getStatusDisplay(artikel.status)}\r\n                    </span>\r\n                  </td>\r\n                  <td>{formatDisplayDate(artikel.updated_at)}</td>\r\n                  <td>\r\n                    <div className=\"action-buttons\">\r\n                      <button\r\n                        title=\"Edit\"\r\n                        className=\"action-btn btn-edit\"\r\n                        onClick={() => handleEditArtikel(artikel.id_artikel)}\r\n                      >\r\n                        <i className=\"bi bi-pencil-fill\"></i>\r\n                      </button>\r\n                      <button\r\n                        title=\"Hapus\"\r\n                        className=\"action-btn btn-delete\"\r\n                        onClick={() =>\r\n                          handleDeleteArtikel(artikel.id_artikel, artikel.judul)\r\n                        }\r\n                      >\r\n                        <i className=\"bi bi-trash-fill\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"6\" className=\"text-center\">\r\n                  {searchTerm\r\n                    ? \"Artikel tidak ditemukan.\"\r\n                    : \"Belum ada artikel.\"}\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        itemsPerPage={itemsPerPage}\r\n        totalItems={filteredArtikel.length}\r\n        onPageChange={(pageNumber) => setCurrentPage(pageNumber)}\r\n        onItemsPerPageChange={(value) => {\r\n          setItemsPerPage(value);\r\n          setCurrentPage(1);\r\n        }}\r\n        indexOfFirstItem={indexOfFirstItem}\r\n        currentItemsLength={currentItems.length}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KelolaArtikel;\r\n"],"names":["_ref","title","onAddClick","addLabel","addIcon","_jsx","className","children","_jsxs","onClick","currentPage","totalPages","itemsPerPage","totalItems","onPageChange","onItemsPerPageChange","indexOfFirstItem","currentItemsLength","paginate","pageNumber","value","onChange","event","parseInt","target","style","marginLeft","disabled","searchTerm","setSearchTerm","setCurrentPage","type","placeholder","e","API_BASE_URL","navigate","useNavigate","artikelList","setArtikelList","useState","isLoading","setIsLoading","setItemsPerPage","useEffect","async","token","localStorage","getItem","toast","warn","response","fetch","concat","headers","Authorization","ok","Error","data","json","error","message","fetchArtikel","filteredArtikel","useMemo","length","filter","artikel","judul","toLowerCase","includes","kategori","penulis","indexOfLastItem","currentItems","slice","Math","ceil","formatDisplayDate","isoDateString","Date","toLocaleDateString","day","month","year","getStatusDisplay","statusDB","Published","Draft","Archived","ToastContainer","position","autoClose","hideProgressBar","PageHeader","handleAddArtikel","ArtikelToolbar","width","colSpan","map","status","replace","updated_at","handleEditArtikel","id","id_artikel","window","confirm","method","prevList","item","success","handleDeleteArtikel","Pagination"],"sourceRoot":""}