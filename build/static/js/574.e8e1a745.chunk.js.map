{"version":3,"file":"static/js/574.e8e1a745.chunk.js","mappings":"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","sources":["components/profil/InformasiProfilForm.js","components/profil/UbahPasswordForm.js","components/profil/FotoProfilForm.js","pages/public/Profil/HalamanProfilSaya.js"],"sourcesContent":["// file: /pages/admin/profil/InformasiProfilForm.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction InformasiProfilForm({ initialData }) {\r\n  const [formData, setFormData] = useState({\r\n    nama_lengkap: \"\",\r\n    email: \"\",\r\n    domisili: \"\",\r\n    instansi: \"\",\r\n    nomor_telepon: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (initialData) {\r\n      setFormData({\r\n        nama_lengkap: initialData.nama_lengkap || \"\",\r\n        email: initialData.email || \"\",\r\n        domisili: initialData.domisili || \"\",\r\n        instansi: initialData.instansi || \"\",\r\n        nomor_telepon: initialData.nomor_telepon || \"\",\r\n      });\r\n    }\r\n  }, [initialData]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      const data = await response.json();\r\n      if (!response.ok)\r\n        throw new Error(data.message || \"Gagal memperbarui profil.\");\r\n      toast.success(data.message);\r\n    } catch (err) {\r\n      toast.error(err.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"profil-form-card\">\r\n      <h3 className=\"card-title\">Informasi Akun</h3>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"nama_lengkap\">Nama Lengkap</label>\r\n        <div className=\"input-wrapper-icon\">\r\n          <i className=\"bi bi-person-badge\"></i>\r\n          <input\r\n            type=\"text\"\r\n            id=\"nama_lengkap\"\r\n            name=\"nama_lengkap\"\r\n            value={formData.nama_lengkap}\r\n            onChange={handleChange}\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"email\">Email</label>\r\n        <div className=\"input-wrapper-icon\">\r\n          <i className=\"bi bi-envelope\"></i>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"domisili\">Domisili</label>\r\n        <div className=\"input-wrapper-icon\">\r\n          <i className=\"bi bi-pin-map\"></i>\r\n          <input\r\n            type=\"text\"\r\n            id=\"domisili\"\r\n            name=\"domisili\"\r\n            value={formData.domisili}\r\n            onChange={handleChange}\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"instansi\">Instansi</label>\r\n        <div className=\"input-wrapper-icon\">\r\n          <i className=\"bi bi-building\"></i>\r\n          <input\r\n            type=\"text\"\r\n            id=\"instansi\"\r\n            name=\"instansi\"\r\n            value={formData.instansi}\r\n            onChange={handleChange}\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"nomor_telepon\">Nomor Telepon</label>\r\n        <div className=\"input-wrapper-icon\">\r\n          <i className=\"bi bi-telephone\"></i>\r\n          <input\r\n            type=\"tel\"\r\n            id=\"nomor_telepon\"\r\n            name=\"nomor_telepon\"\r\n            value={formData.nomor_telepon}\r\n            onChange={handleChange}\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" className=\"btn-submit-profil\" disabled={loading}>\r\n        {loading ? \"Menyimpan...\" : \"Simpan Perubahan\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default InformasiProfilForm;\r\n","// file: /pages/admin/profil/UbahPasswordForm.js\r\nimport React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction UbahPasswordForm() {\r\n  const [passwordData, setPasswordData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  });\r\n  const [passwordVisibility, setPasswordVisibility] = useState({\r\n    current: false,\r\n    new: false,\r\n    confirm: false,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const toggleVisibility = (field) => {\r\n    setPasswordVisibility((prev) => ({ ...prev, [field]: !prev[field] }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (passwordData.newPassword !== passwordData.confirmNewPassword) {\r\n      toast.error(\"Password baru dan konfirmasi password tidak cocok.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(\r\n        \"http://localhost:5000/api/profile/password\",\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({\r\n            currentPassword: passwordData.currentPassword,\r\n            newPassword: passwordData.newPassword,\r\n          }),\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (!response.ok)\r\n        throw new Error(data.message || \"Gagal memperbarui password.\");\r\n      toast.success(data.message);\r\n      setPasswordData({\r\n        currentPassword: \"\",\r\n        newPassword: \"\",\r\n        confirmNewPassword: \"\",\r\n      });\r\n    } catch (err) {\r\n      toast.error(err.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"profil-form-card\">\r\n      <h3 className=\"card-title\">Ubah Password</h3>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"currentPassword\">Password Saat Ini</label>\r\n        <div className=\"input-wrapper-icon\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"password-toggle-btn-left\"\r\n            onClick={() => toggleVisibility(\"current\")}\r\n          >\r\n            <i\r\n              className={`bi ${\r\n                passwordVisibility.current ? \"bi-unlock-fill\" : \"bi-lock-fill\"\r\n              }`}\r\n            ></i>\r\n          </button>\r\n          <input\r\n            type={passwordVisibility.current ? \"text\" : \"password\"}\r\n            id=\"currentPassword\"\r\n            name=\"currentPassword\"\r\n            value={passwordData.currentPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"••••••••\"\r\n            required\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"newPassword\">Password Baru</label>\r\n        <div className=\"input-wrapper-icon\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"password-toggle-btn-left\"\r\n            onClick={() => toggleVisibility(\"new\")}\r\n          >\r\n            <i\r\n              className={`bi ${\r\n                passwordVisibility.new ? \"bi-unlock-fill\" : \"bi-lock-fill\"\r\n              }`}\r\n            ></i>\r\n          </button>\r\n          <input\r\n            type={passwordVisibility.new ? \"text\" : \"password\"}\r\n            id=\"newPassword\"\r\n            name=\"newPassword\"\r\n            value={passwordData.newPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"Minimal 8 karakter\"\r\n            required\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"confirmNewPassword\">Konfirmasi Password Baru</label>\r\n        <div className=\"input-wrapper-icon\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"password-toggle-btn-left\"\r\n            onClick={() => toggleVisibility(\"confirm\")}\r\n          >\r\n            <i\r\n              className={`bi ${\r\n                passwordVisibility.confirm ? \"bi-unlock-fill\" : \"bi-lock-fill\"\r\n              }`}\r\n            ></i>\r\n          </button>\r\n          <input\r\n            type={passwordVisibility.confirm ? \"text\" : \"password\"}\r\n            id=\"confirmNewPassword\"\r\n            name=\"confirmNewPassword\"\r\n            value={passwordData.confirmNewPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"Ulangi password baru\"\r\n            required\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" className=\"btn-submit-profil\" disabled={loading}>\r\n        {loading ? \"Menyimpan...\" : \"Ubah Password\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UbahPasswordForm;\r\n","// file: /pages/admin/profil/FotoProfilForm.js (Final dengan Preview Modal)\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction FotoProfilForm({ initialAvatar, onUpdateSuccess }) {\r\n  const [avatarFile, setAvatarFile] = useState(null);\r\n  const [avatarPreview, setAvatarPreview] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // --- PERUBAHAN 1: State untuk mengontrol modal ---\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAvatarPreview(\r\n      initialAvatar ? `http://localhost:5000${initialAvatar}` : null\r\n    );\r\n  }, [initialAvatar]);\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setAvatarFile(file);\r\n      setAvatarPreview(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!avatarFile) {\r\n      toast.warn(\"Silakan pilih file avatar terlebih dahulu.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const data = new FormData();\r\n      data.append(\"avatar\", avatarFile);\r\n      const response = await fetch(\"http://localhost:5000/api/profile/avatar\", {\r\n        method: \"PUT\",\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        body: data,\r\n      });\r\n      const result = await response.json();\r\n      if (!response.ok)\r\n        throw new Error(result.message || \"Gagal memperbarui avatar.\");\r\n\r\n      toast.success(result.message);\r\n      setAvatarFile(null);\r\n\r\n      if (onUpdateSuccess) {\r\n        onUpdateSuccess();\r\n      }\r\n    } catch (err) {\r\n      toast.error(err.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // --- PERUBAHAN 2: Fungsi untuk membuka dan menutup modal ---\r\n  const openModal = () => {\r\n    if (avatarPreview) {\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {/* Menggunakan fragment agar bisa menampung form dan modal */}\r\n      <form onSubmit={handleSubmit} className=\"profil-form-card\">\r\n        <h3 className=\"card-title\">Foto Profil</h3>\r\n\r\n        {/* --- PERUBAHAN 3: Struktur baru untuk avatar dan tombolnya --- */}\r\n        <div className=\"avatar-section-wrapper\">\r\n          <div\r\n            className=\"avatar-container\"\r\n            onClick={openModal}\r\n            title=\"Klik untuk perbesar\"\r\n          >\r\n            {avatarPreview ? (\r\n              <img src={avatarPreview} alt=\"Avatar\" className=\"avatar-image\" />\r\n            ) : (\r\n              <div className=\"avatar-placeholder\">\r\n                <i className=\"bi bi-person-circle\"></i>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <p className=\"avatar-instruction\">Klik foto untuk perbesar</p>\r\n\r\n          <label htmlFor=\"avatar\" className=\"btn-upload-label\">\r\n            <i className=\"bi bi-image\"></i>\r\n            {avatarFile ? avatarFile.name : \"Pilih Foto Baru\"}\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"avatar\"\r\n            name=\"avatar\"\r\n            onChange={handleFileChange}\r\n            accept=\"image/*\"\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn-submit-profil\"\r\n          disabled={loading || !avatarFile}\r\n        >\r\n          {loading ? \"Mengunggah...\" : \"Unggah Foto\"}\r\n        </button>\r\n      </form>\r\n      {/* --- PERUBAHAN 4: Struktur JSX untuk modal preview --- */}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\" onClick={closeModal}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <span className=\"modal-close-btn\" onClick={closeModal}>\r\n              &times;\r\n            </span>\r\n            <img\r\n              src={avatarPreview}\r\n              alt=\"Preview Foto Profil\"\r\n              className=\"modal-image\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FotoProfilForm;\r\n","// file: /pages/public/Profil/HalamanProfilSaya.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// Impor komponen dari lokasi bersama yang baru\r\nimport InformasiProfilForm from \"../../../components/profil/InformasiProfilForm\";\r\nimport UbahPasswordForm from \"../../../components/profil/UbahPasswordForm\";\r\nimport FotoProfilForm from \"../../../components/profil/FotoProfilForm\";\r\n\r\n// Impor CSS baru untuk halaman ini\r\nimport \"./HalamanProfilSaya.css\";\r\n\r\nfunction HalamanProfilSaya() {\r\n  const [currentUserData, setCurrentUserData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Fungsi untuk me-refresh data user setelah ada perubahan\r\n  const refreshUserData = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCurrentUserData(data);\r\n      } else {\r\n        throw new Error(\"Gagal memuat ulang data pengguna.\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      setIsLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        toast.error(\"Sesi tidak valid. Silakan login kembali.\");\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/profile\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setCurrentUserData(data);\r\n        } else {\r\n          toast.error(\"Gagal mengambil data profil.\");\r\n        }\r\n      } catch (error) {\r\n        toast.error(\"Gagal terhubung ke server.\");\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <div className=\"loading-container\">Memuat data profil...</div>;\r\n  }\r\n\r\n  if (!currentUserData) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        Gagal memuat data. Coba muat ulang halaman.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    // Gunakan class CSS baru\r\n    <div className=\"halaman-profil-saya-container\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        theme=\"colored\"\r\n        hideProgressBar={false}\r\n      />\r\n      <header className=\"page-header-profil\">\r\n        <h1>Profil Saya</h1>\r\n        <p>Kelola informasi akun, password, dan foto profil Anda.</p>\r\n      </header>\r\n      <div className=\"profil-content-grid\">\r\n        <div className=\"profil-main-column\">\r\n          <InformasiProfilForm\r\n            initialData={currentUserData}\r\n            onUpdateSuccess={refreshUserData}\r\n          />\r\n          <UbahPasswordForm />\r\n        </div>\r\n        <div className=\"profil-side-column\">\r\n          <FotoProfilForm\r\n            initialAvatar={currentUserData.url_foto_profil}\r\n            onUpdateSuccess={refreshUserData}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HalamanProfilSaya;\r\n"],"names":["_ref","initialData","formData","setFormData","useState","nama_lengkap","email","domisili","instansi","nomor_telepon","loading","setLoading","useEffect","handleChange","e","_objectSpread","target","name","value","_jsxs","onSubmit","async","preventDefault","token","localStorage","getItem","response","fetch","method","headers","Authorization","concat","body","JSON","stringify","data","json","ok","Error","message","toast","success","err","error","className","children","_jsx","htmlFor","type","id","onChange","disabled","passwordData","setPasswordData","currentPassword","newPassword","confirmNewPassword","passwordVisibility","setPasswordVisibility","current","new","confirm","toggleVisibility","field","prev","onClick","placeholder","required","initialAvatar","onUpdateSuccess","avatarFile","setAvatarFile","avatarPreview","setAvatarPreview","isModalOpen","setIsModalOpen","closeModal","_Fragment","FormData","append","result","warn","openModal","title","src","alt","file","files","URL","createObjectURL","accept","stopPropagation","currentUserData","setCurrentUserData","isLoading","setIsLoading","refreshUserData","fetchInitialData","ToastContainer","position","autoClose","theme","hideProgressBar","InformasiProfilForm","UbahPasswordForm","FotoProfilForm","url_foto_profil"],"sourceRoot":""}