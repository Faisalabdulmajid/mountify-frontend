{"version":3,"file":"static/js/690.fe2fafa7.chunk.js","mappings":"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","sources":["components/common/PageHeader/PageHeader.js","pages/admin/tags/components/TagsToolbar.js","pages/admin/tags/KelolaTags.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst PageHeader = ({\r\n  title,\r\n  onAddClick,\r\n  addLabel = \"Tambah\",\r\n  addIcon = <i className=\"bi bi-plus-lg\"></i>,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div className=\"controls-container\">\r\n      <div className=\"header-row\">\r\n        <h1 className=\"page-title\">{title}</h1>\r\n        {onAddClick && (\r\n          <button className=\"btn-add-new\" onClick={onAddClick}>\r\n            {addIcon} {addLabel}\r\n          </button>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from \"react\";\r\n\r\nconst TagsToolbar = ({ searchTerm, setSearchTerm }) => {\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <div className=\"search-container\">\r\n        <div className=\"input-wrapper-icon\">\r\n          <i className=\"bi bi-search\"></i>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Cari nama tag...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagsToolbar;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"sweetalert2/dist/sweetalert2.min.css\";\r\nimport \"./KelolaTags.css\";\r\nimport { PageHeader } from \"../../../components/common/PageHeader\";\r\nimport \"../../../components/common/PageHeader/PageHeader.css\";\r\nimport { TagsToolbar } from \"./components\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api/admin\";\r\n\r\nfunction KelolaTags() {\r\n  const [tags, setTags] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  // Fungsi untuk mengambil data tags dari server\r\n  const fetchTags = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(`${API_BASE_URL}/tags`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (!response.ok) throw new Error(\"Gagal mengambil data tags.\");\r\n      const data = await response.json();\r\n      setTags(data);\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTags();\r\n  }, []);\r\n\r\n  const filteredTags = useMemo(() => {\r\n    return tags.filter((tag) =>\r\n      tag.nama_tag.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  }, [tags, searchTerm]);\r\n\r\n  // Fungsi untuk menangani penambahan tag baru\r\n  const handleAddTag = async () => {\r\n    const { value: nama_tag } = await Swal.fire({\r\n      title: \"Tambah Tag Baru\",\r\n      input: \"text\",\r\n      inputLabel: \"Nama Tag\",\r\n      inputPlaceholder: \"Masukkan nama tag baru...\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Simpan\",\r\n      cancelButtonText: \"Batal\",\r\n      inputValidator: (value) => {\r\n        if (!value) {\r\n          return \"Nama tag tidak boleh kosong!\";\r\n        }\r\n      },\r\n    });\r\n\r\n    if (nama_tag) {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await fetch(`${API_BASE_URL}/tags`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ nama_tag }),\r\n        });\r\n        const resJson = await response.json();\r\n        if (!response.ok) throw new Error(resJson.message);\r\n\r\n        toast.success(resJson.message);\r\n        fetchTags(); // Ambil ulang data terbaru\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fungsi untuk menangani edit tag\r\n  const handleEditTag = async (id_tag, currentName) => {\r\n    const { value: nama_tag } = await Swal.fire({\r\n      title: \"Edit Nama Tag\",\r\n      input: \"text\",\r\n      inputLabel: \"Nama Tag\",\r\n      inputValue: currentName,\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Update\",\r\n      cancelButtonText: \"Batal\",\r\n      inputValidator: (value) => {\r\n        if (!value) {\r\n          return \"Nama tag tidak boleh kosong!\";\r\n        }\r\n      },\r\n    });\r\n\r\n    if (nama_tag && nama_tag !== currentName) {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await fetch(`${API_BASE_URL}/tags/${id_tag}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ nama_tag }),\r\n        });\r\n        const resJson = await response.json();\r\n        if (!response.ok) throw new Error(resJson.message);\r\n\r\n        toast.success(resJson.message);\r\n        fetchTags();\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fungsi untuk menangani hapus tag\r\n  const handleDeleteTag = (id_tag, nama_tag) => {\r\n    Swal.fire({\r\n      title: \"Apakah Anda yakin?\",\r\n      text: `Menghapus tag \"${nama_tag}\" juga akan melepaskan kaitannya dari semua artikel.`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#d33\",\r\n      cancelButtonColor: \"#3085d6\",\r\n      confirmButtonText: \"Ya, hapus!\",\r\n      cancelButtonText: \"Batal\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          const token = localStorage.getItem(\"token\");\r\n          const response = await fetch(`${API_BASE_URL}/tags/${id_tag}`, {\r\n            method: \"DELETE\",\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          const resJson = await response.json();\r\n          if (!response.ok) throw new Error(resJson.message);\r\n\r\n          toast.success(resJson.message);\r\n          fetchTags();\r\n        } catch (error) {\r\n          toast.error(error.message);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"tags-management-page\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n      />\r\n      <PageHeader\r\n        title=\"Manajemen Tags\"\r\n        addLabel=\"Tambah Tag Baru\"\r\n        onAddClick={handleAddTag}\r\n      />\r\n\r\n      <TagsToolbar searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n\r\n      <div className=\"table-container\">\r\n        <table className=\"data-table\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"50%\" }}>\r\n                <div className=\"header-cell-content\">\r\n                  <span>Nama Tag</span>\r\n                </div>\r\n              </th>\r\n              <th style={{ width: \"30%\" }}>\r\n                <div className=\"header-cell-content\">\r\n                  <span>Jumlah Artikel</span>\r\n                </div>\r\n              </th>\r\n              <th style={{ width: \"20%\" }}>Aksi</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {isLoading ? (\r\n              <tr>\r\n                <td colSpan=\"3\" className=\"text-center\">\r\n                  Memuat data...\r\n                </td>\r\n              </tr>\r\n            ) : filteredTags.length > 0 ? (\r\n              filteredTags.map((tag) => (\r\n                <tr key={tag.id_tag}>\r\n                  <td>{tag.nama_tag}</td>\r\n                  <td>{tag.jumlah_artikel} artikel</td>\r\n                  <td>\r\n                    <div className=\"action-buttons\">\r\n                      <button\r\n                        title=\"Edit\"\r\n                        className=\"action-btn btn-edit\"\r\n                        onClick={() => handleEditTag(tag.id_tag, tag.nama_tag)}\r\n                      >\r\n                        <i className=\"bi bi-pencil-fill\"></i>\r\n                      </button>\r\n                      <button\r\n                        title=\"Hapus\"\r\n                        className=\"action-btn btn-delete\"\r\n                        onClick={() =>\r\n                          handleDeleteTag(tag.id_tag, tag.nama_tag)\r\n                        }\r\n                      >\r\n                        <i className=\"bi bi-trash-fill\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"3\" className=\"text-center\">\r\n                  Tidak ada data tags.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KelolaTags;\r\n"],"names":["_ref","title","onAddClick","addLabel","addIcon","_jsx","className","children","_jsxs","onClick","searchTerm","setSearchTerm","type","placeholder","value","onChange","e","target","API_BASE_URL","tags","setTags","useState","isLoading","setIsLoading","fetchTags","async","token","localStorage","getItem","response","fetch","concat","headers","Authorization","ok","Error","data","json","error","toast","message","useEffect","filteredTags","useMemo","filter","tag","nama_tag","toLowerCase","includes","ToastContainer","position","autoClose","hideProgressBar","PageHeader","Swal","input","inputLabel","inputPlaceholder","showCancelButton","confirmButtonText","cancelButtonText","inputValidator","method","body","JSON","stringify","resJson","success","TagsToolbar","style","width","colSpan","length","map","jumlah_artikel","id_tag","currentName","inputValue","handleEditTag","handleDeleteTag","text","icon","confirmButtonColor","cancelButtonColor","then","result","isConfirmed"],"sourceRoot":""}