{"version":3,"file":"static/js/928.455da523.chunk.js","mappings":"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","sources":["components/common/PageHeader/PageHeader.js","components/common/Pagination/Pagination.js","pages/admin/jalur/components/JalurTable.js","pages/admin/jalur/components/JalurToolbar.js","pages/admin/jalur/KelolaJalur.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst PageHeader = ({\r\n  title,\r\n  onAddClick,\r\n  addLabel = \"Tambah\",\r\n  addIcon = <i className=\"bi bi-plus-lg\"></i>,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div className=\"controls-container\">\r\n      <div className=\"header-row\">\r\n        <h1 className=\"page-title\">{title}</h1>\r\n        {onAddClick && (\r\n          <button className=\"btn-add-new\" onClick={onAddClick}>\r\n            {addIcon} {addLabel}\r\n          </button>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","// src/components/common/Pagination/Pagination.js\r\nimport React from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  totalPages,\r\n  itemsPerPage,\r\n  totalItems,\r\n  onPageChange,\r\n  onItemsPerPageChange,\r\n  indexOfFirstItem,\r\n  currentItemsLength,\r\n}) => {\r\n  const handleItemsPerPageChange = (event) => {\r\n    onItemsPerPageChange(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) {\r\n      onPageChange(pageNumber);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <div className=\"pagination-info\">\r\n        <span>Baris per halaman:</span>\r\n        <select\r\n          value={itemsPerPage}\r\n          onChange={handleItemsPerPageChange}\r\n          className=\"items-per-page-select\"\r\n        >\r\n          <option value={5}>5</option>\r\n          <option value={10}>10</option>\r\n          <option value={20}>20</option>\r\n          <option value={50}>50</option>\r\n          <option value={100}>100</option>\r\n        </select>\r\n        <span style={{ marginLeft: \"15px\" }}>\r\n          Menampilkan {currentItemsLength > 0 ? indexOfFirstItem + 1 : 0}-\r\n          {indexOfFirstItem + currentItemsLength} dari {totalItems} data\r\n        </span>\r\n      </div>\r\n      <div className=\"pagination-controls\">\r\n        <button\r\n          onClick={() => paginate(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n        >\r\n          Sebelumnya\r\n        </button>\r\n        <span>\r\n          Halaman {currentPage} dari {totalPages || 1}\r\n        </span>\r\n        <button\r\n          onClick={() => paginate(currentPage + 1)}\r\n          disabled={currentPage === totalPages || totalPages === 0}\r\n        >\r\n          Selanjutnya\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","// src/pages/admin/jalur/components/JalurTable.js\r\nimport React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst JalurTable = ({\r\n  currentItems,\r\n  indexOfFirstItem,\r\n  getKesulitanText,\r\n  handleDeleteJalur,\r\n  sortConfig,\r\n  onSort,\r\n}) => {\r\n  const navigate = useNavigate();\r\n\r\n  const getSortIcon = (key) => {\r\n    if (sortConfig.key !== key) return null; // Tidak menampilkan ikon jika tidak aktif\r\n    if (sortConfig.direction === \"ascending\") {\r\n      return <i className=\"bi bi-sort-up-alt sort-icon-active\"></i>;\r\n    }\r\n    return <i className=\"bi bi-sort-down sort-icon-active\"></i>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: \"8%\" }}>No</th>\r\n            <th style={{ width: \"20%\" }} onClick={() => onSort(\"nama_jalur\")}>\r\n              <div className=\"header-cell-content\">\r\n                <span>Nama Jalur</span>\r\n                {getSortIcon(\"nama_jalur\")}\r\n              </div>\r\n            </th>\r\n            <th style={{ width: \"20%\" }} onClick={() => onSort(\"nama_gunung\")}>\r\n              <div className=\"header-cell-content\">\r\n                <span>Gunung</span>\r\n                {getSortIcon(\"nama_gunung\")}\r\n              </div>\r\n            </th>\r\n            <th\r\n              style={{ width: \"15%\" }}\r\n              onClick={() => onSort(\"estimasi_waktu_jam\")}\r\n            >\r\n              <div className=\"header-cell-content\">\r\n                <span>Estimasi Waktu</span>\r\n                {getSortIcon(\"estimasi_waktu_jam\")}\r\n              </div>\r\n            </th>\r\n            <th\r\n              style={{ width: \"15%\" }}\r\n              onClick={() => onSort(\"kesulitan_skala\")}\r\n            >\r\n              <div className=\"header-cell-content\">\r\n                <span>Kesulitan</span>\r\n                {getSortIcon(\"kesulitan_skala\")}\r\n              </div>\r\n            </th>\r\n            <th style={{ width: \"12%\" }} onClick={() => onSort(\"status_jalur\")}>\r\n              <div className=\"header-cell-content\">\r\n                <span>Status</span>\r\n                {getSortIcon(\"status_jalur\")}\r\n              </div>\r\n            </th>\r\n            <th style={{ width: \"13%\" }}>Pintu Masuk</th>\r\n            <th style={{ width: \"15%\" }}>Aksi</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentItems.length > 0 ? (\r\n            currentItems.map((jalur, index) => (\r\n              <tr key={jalur.id_jalur}>\r\n                <td>{indexOfFirstItem + index + 1}</td>\r\n                <td>\r\n                  <span title={jalur.nama_jalur}>{jalur.nama_jalur}</span>\r\n                </td>\r\n                <td>\r\n                  <Link\r\n                    to={`/admin/gunung/edit/${jalur.id_gunung}`}\r\n                    title={`Edit data ${jalur.nama_gunung}`}\r\n                  >\r\n                    {jalur.nama_gunung}\r\n                  </Link>\r\n                </td>\r\n                <td>\r\n                  <span title={`Estimasi waktu pendakian`}>\r\n                    {jalur.estimasi_waktu_jam || 0} Jam\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span\r\n                    title={`Tingkat kesulitan: ${getKesulitanText(\r\n                      jalur.kesulitan_skala\r\n                    )} (${jalur.kesulitan_skala || 0}/10)`}\r\n                  >\r\n                    {getKesulitanText(jalur.kesulitan_skala)} (\r\n                    {jalur.kesulitan_skala || 0}/10)\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span\r\n                    className={`status-badge status-${\r\n                      jalur.status_jalur?.toLowerCase().replace(/\\s+/g, \"-\") ||\r\n                      \"belum-diketahui\"\r\n                    }`}\r\n                  >\r\n                    {jalur.status_jalur || \"N/A\"}\r\n                  </span>\r\n                </td>\r\n                <td>{jalur.lokasi_pintu_masuk || \"N/A\"}</td>\r\n                <td>\r\n                  <div className=\"action-buttons\">\r\n                    <button\r\n                      className=\"action-btn btn-view-poi\"\r\n                      title=\"Lihat Titik Penting (POI)\"\r\n                      onClick={() =>\r\n                        navigate(`/admin/poi?jalurId=${jalur.id_jalur}`)\r\n                      }\r\n                    >\r\n                      <i className=\"bi bi-geo-alt-fill\"></i>\r\n                    </button>\r\n                    <button\r\n                      className=\"action-btn btn-edit\"\r\n                      title=\"Edit Jalur\"\r\n                      onClick={() =>\r\n                        navigate(`/admin/jalur/edit/${jalur.id_jalur}`)\r\n                      }\r\n                    >\r\n                      <i className=\"bi bi-pencil-fill\"></i>\r\n                    </button>\r\n                    <button\r\n                      className=\"action-btn btn-delete\"\r\n                      title=\"Hapus Jalur\"\r\n                      onClick={() => handleDeleteJalur(jalur.id_jalur)}\r\n                    >\r\n                      <i className=\"bi bi-trash-fill\"></i>\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"8\" style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n                Tidak ada data jalur yang cocok dengan filter.\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JalurTable;\r\n","import React from \"react\";\r\n\r\n// Konstanta enum status jalur - harus sama dengan backend\r\nconst TRAIL_STATUS_OPTIONS = [\r\n  \"Belum Diketahui\",\r\n  \"Buka\",\r\n  \"Tutup Sementara\",\r\n  \"Tutup\",\r\n];\r\n\r\nconst JalurToolbar = ({\r\n  searchTerm,\r\n  setSearchTerm,\r\n  gunungFilter,\r\n  setGunungFilter,\r\n  statusFilter,\r\n  setStatusFilter,\r\n  difficultyFilter,\r\n  setDifficultyFilter,\r\n  allGunungList,\r\n  filterGunungId,\r\n  onShowAllJalur,\r\n}) => {\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <div className=\"search-container\">\r\n        <div className=\"input-wrapper-icon\">\r\n          <i className=\"bi bi-search\"></i>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Cari berdasarkan nama jalur...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"filter-container\">\r\n        <div className=\"filter-group\">\r\n          <label>Gunung:</label>\r\n          <select\r\n            value={gunungFilter}\r\n            onChange={(e) => setGunungFilter(e.target.value)}\r\n            disabled={!!filterGunungId}\r\n          >\r\n            <option value=\"Semua\">Semua Gunung</option>\r\n            {allGunungList.map((gunung) => (\r\n              <option key={gunung.id_gunung} value={gunung.id_gunung}>\r\n                {gunung.nama_gunung}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>Status:</label>\r\n          <select\r\n            value={statusFilter}\r\n            onChange={(e) => setStatusFilter(e.target.value)}\r\n          >\r\n            <option value=\"Semua\">Semua Status</option>\r\n            {TRAIL_STATUS_OPTIONS.map((status) => (\r\n              <option key={status} value={status}>\r\n                {status}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>Kesulitan:</label>\r\n          <select\r\n            value={difficultyFilter}\r\n            onChange={(e) => setDifficultyFilter(e.target.value)}\r\n          >\r\n            <option value=\"Semua\">Semua Tingkat</option>\r\n            <option value=\"Mudah\">Mudah</option>\r\n            <option value=\"Menengah\">Menengah</option>\r\n            <option value=\"Sulit\">Sulit</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {filterGunungId && (\r\n        <button className=\"btn-secondary\" onClick={onShowAllJalur}>\r\n          Tampilkan Semua Jalur\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JalurToolbar;\r\n","// src/pages/admin/jalur/KelolaJalur.js (Kode Sudah Diperbaiki)\r\nimport React, { useState, useMemo, useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"sweetalert2/dist/sweetalert2.min.css\";\r\nimport \"./KelolaJalur.css\";\r\nimport { PageHeader } from \"../../../components/common/PageHeader\";\r\nimport { JalurToolbar, JalurTable } from \"./components\";\r\nimport Pagination from \"../../../components/common/Pagination\";\r\nimport \"../../../components/common/PageHeader/PageHeader.css\"; // Import CSS PageHeader\r\n\r\nconst API_BASE_URL = \"http://localhost:5000\";\r\n\r\nfunction KelolaJalur() {\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const filterGunungId = searchParams.get(\"gunungId\");\r\n\r\n  const [jalurList, setJalurList] = useState([]);\r\n  // --- PERBAIKAN 1: Tambahkan state baru untuk menampung SEMUA gunung dari database ---\r\n  const [allGunungList, setAllGunungList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [gunungFilter, setGunungFilter] = useState(\"Semua\");\r\n  const [statusFilter, setStatusFilter] = useState(\"Semua\");\r\n  const [difficultyFilter, setDifficultyFilter] = useState(\"Semua\");\r\n\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: null,\r\n    direction: \"ascending\",\r\n  });\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n\r\n  // --- PERBAIKAN 2: Ubah useEffect untuk fetch data jalur dan data semua gunung ---\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const headers = { Authorization: `Bearer ${token}` };\r\n\r\n        // Gunakan Promise.all untuk fetch kedua endpoint secara paralel\r\n        const [jalurResponse, gunungResponse] = await Promise.all([\r\n          fetch(`${API_BASE_URL}/api/admin/jalur`, { headers }),\r\n          fetch(`${API_BASE_URL}/api/admin/gunung`, { headers }), // Fetch semua gunung\r\n        ]);\r\n\r\n        if (!jalurResponse.ok) {\r\n          const errJson = await jalurResponse.json().catch(() => ({}));\r\n          throw new Error(\r\n            `Gagal mengambil data jalur. ${\r\n              errJson.message ? \"Detail: \" + errJson.message : \"\"\r\n            }`\r\n          );\r\n        }\r\n        if (!gunungResponse.ok) {\r\n          const errJson = await gunungResponse.json().catch(() => ({}));\r\n          let detailMsg = errJson.message ? `Detail: ${errJson.message}` : \"\";\r\n          if (errJson.error) detailMsg += ` | Error: ${errJson.error}`;\r\n          throw new Error(`Gagal mengambil daftar gunung. ${detailMsg}`);\r\n        }\r\n\r\n        const jalurData = await jalurResponse.json();\r\n        const gunungData = await gunungResponse.json();\r\n\r\n        // --- TAMBAHKAN BARIS INI UNTUK DEBUGGING ---\r\n        console.log(\"DATA JALUR DARI API:\", jalurData);\r\n        // -------------------------------------------\r\n\r\n        setJalurList(jalurData);\r\n        setAllGunungList(gunungData); // Simpan daftar semua gunung ke state\r\n      } catch (err) {\r\n        setError(err.message);\r\n        toast.error(err.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Dependensi kosong agar hanya berjalan sekali saat komponen dimuat\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [itemsPerPage, searchTerm, gunungFilter, statusFilter, difficultyFilter]);\r\n\r\n  const getKesulitanText = (skala) => {\r\n    if (skala === null || skala === undefined) return \"N/A\";\r\n    if (skala <= 3) return \"Mudah\";\r\n    if (skala <= 7) return \"Menengah\";\r\n    if (skala <= 10) return \"Sulit\";\r\n    return \"N/A\";\r\n  };\r\n\r\n  // --- PERBAIKAN 3: useMemo ini sekarang sudah tidak diperlukan, bisa dihapus atau dikomentari ---\r\n  /*\r\n  const uniqueGunungList = useMemo(() => {\r\n    const gunungMap = new Map();\r\n    jalurList.forEach((jalur) => {\r\n      gunungMap.set(jalur.id_gunung, jalur.nama_gunung);\r\n    });\r\n    return Array.from(gunungMap, ([id, name]) => ({\r\n      id_gunung: id,\r\n      nama_gunung: name,\r\n    }));\r\n  }, [jalurList]);\r\n  */\r\n\r\n  const filteredJalur = useMemo(() => {\r\n    let filtered = [...jalurList];\r\n\r\n    if (filterGunungId) {\r\n      filtered = filtered.filter(\r\n        (jalur) => jalur.id_gunung === parseInt(filterGunungId, 10)\r\n      );\r\n    }\r\n\r\n    if (gunungFilter !== \"Semua\") {\r\n      filtered = filtered.filter(\r\n        (jalur) => jalur.id_gunung === parseInt(gunungFilter)\r\n      );\r\n    }\r\n\r\n    if (statusFilter !== \"Semua\") {\r\n      filtered = filtered.filter(\r\n        (jalur) => jalur.status_jalur === statusFilter\r\n      );\r\n    }\r\n\r\n    if (difficultyFilter !== \"Semua\") {\r\n      filtered = filtered.filter(\r\n        (jalur) => getKesulitanText(jalur.kesulitan_skala) === difficultyFilter\r\n      );\r\n    }\r\n\r\n    if (searchTerm) {\r\n      const searchLower = searchTerm.toLowerCase();\r\n      filtered = filtered.filter((jalur) =>\r\n        jalur.nama_jalur.toLowerCase().includes(searchLower)\r\n      );\r\n    }\r\n\r\n    // Apply sorting\r\n    if (sortConfig.key) {\r\n      filtered.sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  }, [\r\n    jalurList,\r\n    searchTerm,\r\n    filterGunungId,\r\n    gunungFilter,\r\n    statusFilter,\r\n    difficultyFilter,\r\n    sortConfig,\r\n  ]);\r\n\r\n  const handleSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = filteredJalur.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(filteredJalur.length / itemsPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) {\r\n      setCurrentPage(pageNumber);\r\n    }\r\n  };\r\n\r\n  const handleItemsPerPageChange = (value) => {\r\n    setItemsPerPage(value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleDeleteJalur = async (id_jalur) => {\r\n    Swal.fire({\r\n      title: \"Apakah Anda yakin?\",\r\n      text: \"Data jalur yang dihapus tidak dapat dikembalikan!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#d33\",\r\n      cancelButtonColor: \"#3085d6\",\r\n      confirmButtonText: \"Ya, hapus!\",\r\n      cancelButtonText: \"Batal\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          const token = localStorage.getItem(\"token\");\r\n          const response = await fetch(\r\n            `${API_BASE_URL}/api/admin/jalur/${id_jalur}`,\r\n            {\r\n              method: \"DELETE\",\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          const resJson = await response.json();\r\n          if (!response.ok) throw new Error(resJson.message);\r\n\r\n          Swal.fire(\"Dihapus!\", resJson.message, \"success\");\r\n          setJalurList((prev) => prev.filter((j) => j.id_jalur !== id_jalur));\r\n        } catch (err) {\r\n          toast.error(err.message);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  if (isLoading) return <div className=\"loading-container\">Memuat data...</div>;\r\n  if (error)\r\n    return (\r\n      <div className=\"form-error-message\" style={{ margin: \"20px\" }}>\r\n        Error: {error}\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"jalur-management-page\">\r\n      <ToastContainer position=\"top-right\" autoClose={3000} />\r\n\r\n      <PageHeader\r\n        title=\"Manajemen Data Jalur Pendakian\"\r\n        addLabel=\"Tambah Jalur Baru\"\r\n        onAddClick={() => navigate(\"/admin/jalur/new\")}\r\n      />\r\n\r\n      <JalurToolbar\r\n        searchTerm={searchTerm}\r\n        setSearchTerm={setSearchTerm}\r\n        gunungFilter={gunungFilter}\r\n        setGunungFilter={setGunungFilter}\r\n        statusFilter={statusFilter}\r\n        setStatusFilter={setStatusFilter}\r\n        difficultyFilter={difficultyFilter}\r\n        setDifficultyFilter={setDifficultyFilter}\r\n        allGunungList={allGunungList}\r\n        filterGunungId={filterGunungId}\r\n        onShowAllJalur={() => navigate(\"/admin/jalur\")}\r\n      />\r\n\r\n      <JalurTable\r\n        currentItems={currentItems}\r\n        indexOfFirstItem={indexOfFirstItem}\r\n        getKesulitanText={getKesulitanText}\r\n        handleDeleteJalur={handleDeleteJalur}\r\n        sortConfig={sortConfig}\r\n        onSort={handleSort}\r\n      />\r\n\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        itemsPerPage={itemsPerPage}\r\n        totalItems={filteredJalur.length}\r\n        onPageChange={paginate}\r\n        onItemsPerPageChange={handleItemsPerPageChange}\r\n        indexOfFirstItem={indexOfFirstItem}\r\n        currentItemsLength={currentItems.length}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KelolaJalur;\r\n"],"names":["_ref","title","onAddClick","addLabel","addIcon","_jsx","className","children","_jsxs","onClick","currentPage","totalPages","itemsPerPage","totalItems","onPageChange","onItemsPerPageChange","indexOfFirstItem","currentItemsLength","paginate","pageNumber","value","onChange","event","parseInt","target","style","marginLeft","disabled","currentItems","getKesulitanText","handleDeleteJalur","sortConfig","onSort","navigate","useNavigate","getSortIcon","key","direction","width","length","map","jalur","index","_jalur$status_jalur","nama_jalur","Link","to","concat","id_gunung","nama_gunung","estimasi_waktu_jam","kesulitan_skala","status_jalur","toLowerCase","replace","lokasi_pintu_masuk","id_jalur","colSpan","textAlign","padding","TRAIL_STATUS_OPTIONS","searchTerm","setSearchTerm","gunungFilter","setGunungFilter","statusFilter","setStatusFilter","difficultyFilter","setDifficultyFilter","allGunungList","filterGunungId","onShowAllJalur","type","placeholder","e","gunung","status","API_BASE_URL","searchParams","useSearchParams","get","jalurList","setJalurList","useState","setAllGunungList","isLoading","setIsLoading","error","setError","setSortConfig","setCurrentPage","setItemsPerPage","useEffect","async","token","localStorage","getItem","headers","Authorization","jalurResponse","gunungResponse","Promise","all","fetch","ok","errJson","json","catch","Error","message","detailMsg","jalurData","gunungData","console","log","err","toast","fetchData","skala","undefined","filteredJalur","useMemo","filtered","filter","searchLower","includes","sort","a","b","indexOfLastItem","slice","Math","ceil","margin","ToastContainer","position","autoClose","PageHeader","JalurToolbar","JalurTable","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","response","method","resJson","prev","j","Pagination"],"sourceRoot":""}